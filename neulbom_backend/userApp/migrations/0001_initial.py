# Generated by Django 4.2.1 on 2023-05-28 18:37

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone
import userApp.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(max_length=150, unique=True, verbose_name="아이디"),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=255, unique=True, verbose_name="이메일"
                    ),
                ),
                ("grade", models.IntegerField(default=0, verbose_name="학년")),
                ("is_staff", models.BooleanField(default=False, verbose_name="관리자")),
                ("is_active", models.BooleanField(default=True)),
                (
                    "role",
                    models.CharField(
                        choices=[("s", "학생"), ("t", "선생님")],
                        default="s",
                        max_length=1,
                        verbose_name="학생, 선생님",
                    ),
                ),
                ("is_allowed", models.BooleanField(default=False)),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "school",
                    models.CharField(
                        choices=[("7010126", "경희고등학교"), ("", "기타")],
                        default="7010126",
                        max_length=50,
                    ),
                ),
                (
                    "YearOfAdmission",
                    models.IntegerField(
                        choices=[
                            (2023, "2023년"),
                            (2022, "2022년"),
                            (2021, "2021년"),
                            (2020, "2020년"),
                        ],
                        default=2023,
                        verbose_name="입학연도",
                    ),
                ),
                (
                    "card_img",
                    models.ImageField(
                        blank=True, upload_to=userApp.models.get_file_path
                    ),
                ),
                ("barcode_code", models.CharField(blank=True, max_length=50)),
                (
                    "barcode_img",
                    models.ImageField(
                        blank=True, upload_to=userApp.models.get_file_path
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "user",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
